library(plyr)
basedir <- "~/RA/PPDK/PPDK_lw/"
datfile <- "~/RA/PPDK/PPDK_lw/SigDataPPDK.csv"
genedat <- read.csv(datfile, header = TRUE, row.names = 1)
genedat <- round(genedat)

## Create a data frame with the conditions for each column
nm <- data.frame(nm = colnames(genedat), stringsAsFactors = FALSE)
tmp <- as.data.frame(do.call(rbind, strsplit(nm$nm, "_")))
names(tmp) <- c("Light", "Type", "Loc")
tmp$Rep <- factor(substring(tmp$Light, 3,3))
tmp$Light <- factor(substring(tmp$Light, 1, 2))

jfull <- with(tmp, paste(Light, Type, Loc))

testvals <- expand.grid(c("HL", "LL"), c("1cm", "4cm", "Base", "Tip"))
testlist <- list()
apply(testvals, 1, function(x){
    idx <- paste(x, collapse = "")
    tmp <- jfull
    tmp[grep( paste(x, collapse = ".*"), jfull)] <- idx
    testlist[[idx]] <<- factor(tmp)
    invisible()
})


## Read in all the data we can get the libsizes
## Note we're assuming that fulldat and genedat have
## the columns representing the same samples.
fulldat <- read.csv("~/RA/PPDK/PPDK_lw/FullData.csv", row.names=1, header = T)

osfunc <- function(x){
    ans <- log(quantile(x[x != 0], .75))
    return(ans)
}

offset <- as.numeric(apply(fulldat, 2, osfunc))


cnt <- 1
ngenes <- dim(genedat)[1]


jfull <- factor(jfull)



	# Initial set up
	n.genes <- dim(genedat)[1]


	conds <- as.numeric(jfull)
	

	d <- DGEList(counts = genedat, group = conds)
	d$samples$lib.size <- libsize
	d <- calcNormFactors(d)   #TMM normalization
	d <- estimateCommonDisp(d)
	resEdgeR <- exactTest(d)
	pvals <- resEdgeR$table$p.value
#start <- Sys.time()
#output <- apply(genedat, 1, analyzeGLM)
#end <- Sys.time()
#print(end - start)

#out <- t(output)
#write.csv(out, file = paste(basedir, "GLMpvals.csv", sep = ""))

